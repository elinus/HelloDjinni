// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from Hello.djinni

package com.example.hellodjinni;

import java.util.concurrent.atomic.AtomicBoolean;

/*package*/ abstract class HelloDjinni {
    public abstract void fromLanguage(String key);

    public abstract String fromCpp();

    public static HelloDjinni create()
    {
        return CppProxy.create();
    }

    private static final class CppProxy extends HelloDjinni
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void _djinni_private_destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        @SuppressWarnings("deprecation")
        protected void finalize() throws java.lang.Throwable
        {
            _djinni_private_destroy();
            super.finalize();
        }

        @Override
        public void fromLanguage(String key)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_fromLanguage(this.nativeRef, key);
        }
        private native void native_fromLanguage(long _nativeRef, String key);

        @Override
        public String fromCpp()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_fromCpp(this.nativeRef);
        }
        private native String native_fromCpp(long _nativeRef);

        public static native HelloDjinni create();
    }
}
