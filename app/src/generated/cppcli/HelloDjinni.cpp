// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from Hello.djinni

#include "HelloDjinni.hpp"  // my header
#include "djinni/cppcli/Error.hpp"
#include "djinni/cppcli/Marshal.hpp"
#include "djinni/cppcli/WrapperCache.hpp"

namespace hd {

HelloDjinni^ HelloDjinni::Create() {
    try {
        auto cs_result = ::hd::HelloDjinni::create();
        return ::hd::HelloDjinni::FromCpp(cs_result);
    } DJINNI_TRANSLATE_EXCEPTIONS()
    return nullptr; // Unreachable! (Silencing compiler warnings.)
}

ref class HelloDjinniCppProxy : public HelloDjinni {
    using CppType = std::shared_ptr<::hd::HelloDjinni>;
    using HandleType = ::djinni::CppProxyCache::Handle<CppType>;
public:
    HelloDjinniCppProxy(const CppType& cppRef) : _cppRefHandle(new HandleType(cppRef)) {}

    void FromLanguage(System::String^ key) override {
        try {
            _cppRefHandle->get()->fromLanguage(::djinni::String::ToCpp(key));
        } DJINNI_TRANSLATE_EXCEPTIONS()
    }

    System::String^ FromCpp() override {
        try {
            auto cs_result = _cppRefHandle->get()->fromCpp();
            return ::djinni::String::FromCpp(cs_result);
        } DJINNI_TRANSLATE_EXCEPTIONS()
        return nullptr; // Unreachable! (Silencing compiler warnings.)
    }

    CppType djinni_private_get_proxied_cpp_object() {
        return _cppRefHandle->get();
    }

private:
    AutoPtr<HandleType> _cppRefHandle;
};

HelloDjinni::CppType HelloDjinni::ToCpp(HelloDjinni::CsType cs)
{
    if (!cs) {
        return nullptr;
    }
    return dynamic_cast<HelloDjinniCppProxy^>(cs)->djinni_private_get_proxied_cpp_object();
}

HelloDjinni::CsType HelloDjinni::FromCppOpt(const HelloDjinni::CppOptType& cpp)
{
    if (!cpp) {
        return nullptr;
    }
    return ::djinni::get_cpp_proxy<HelloDjinniCppProxy^>(cpp);
}

}  // namespace hd
